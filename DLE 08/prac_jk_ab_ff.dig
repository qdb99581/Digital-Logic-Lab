<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>1</version>
  <attributes/>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>A/J</string>
        </entry>
      </elementAttributes>
      <pos x="920" y="380"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>B/K</string>
        </entry>
      </elementAttributes>
      <pos x="920" y="420"/>
    </visualElement>
    <visualElement>
      <elementName>Clock</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>CLK</string>
        </entry>
        <entry>
          <string>runRealTime</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="920" y="460"/>
    </visualElement>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>ABFF</string>
        </entry>
        <entry>
          <string>applicationType</string>
          <appType>GHDL</appType>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>A,B,CLK</string>
        </entry>
        <entry>
          <string>Code</string>
          <string>LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity ABFF is
    port(
        A, B, CLK: in std_logic;
        Q_next: out std_logic
    );
end ABFF;

architecture ABFF1 of ABFF is
    signal Qint: std_logic; -- internal value of Q
    signal input: std_logic_vector(0 to 1);

    begin
        input &lt;= A &amp; B;
        Q_next &lt;= Qint;

        -- Q_next &lt;= Qint; -- output Q and QN to port

        process(CLK) -- seems this is necessary for using &quot;if-else&quot;
        begin
            if CLK&apos;event and CLK = &apos;1&apos; then -- rising edge of CLK
                -- Qint &lt;= (A and not Qint) or (not B and Qint);
                Qint &lt;=
                    &apos;0&apos; when input = &quot;00&quot; else
                    Qint when input = &quot;01&quot; else
                    not Qint when input = &quot;10&quot; else
                    &apos;1&apos; when input = &quot;11&quot;;
            end if;
        end process;
end ABFF1;</string>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>Q_next</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>5</int>
        </entry>
      </elementAttributes>
      <pos x="1080" y="380"/>
    </visualElement>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>GHDL</appType>
        </entry>
        <entry>
          <string>Label</string>
          <string>JKFF</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>SN,RN,J,K,CLK</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>5</int>
        </entry>
        <entry>
          <string>Code</string>
          <string>LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity JKFF is
    port(
        SN, RN, J, K, CLK: in std_logic;
        Q, QN: out std_logic
    );
end JKFF;

architecture JKFF1 of JKFF is
    signal Qint: std_logic; -- internal value of Q

    begin
        Q &lt;= Qint; -- output Q and QN to port
        QN &lt;= not Qint;

        process(SN, RN, CLK) -- seems this is necessary for using &quot;if-else&quot;
        begin
            if RN = &apos;0&apos; then 
                Qint &lt;= &apos;0&apos;; -- RN = &apos;0&apos; will clear the FF
            elsif SN = &apos;0&apos; then 
                Qint &lt;= &apos;1&apos;; -- SN = &apos;0&apos; will set FF
            elsif CLK&apos;event and CLK = &apos;0&apos; then -- falling edge of CLK
                Qint &lt;= (J and not Qint) or (not K and Qint);
            end if;
        end process;
end JKFF1;</string>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>Q,QN</string>
        </entry>
      </elementAttributes>
      <pos x="1100" y="660"/>
    </visualElement>
    <visualElement>
      <elementName>Button</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>SN</string>
        </entry>
        <entry>
          <string>activeLow</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="920" y="520"/>
    </visualElement>
    <visualElement>
      <elementName>Button</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RN</string>
        </entry>
        <entry>
          <string>activeLow</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="920" y="580"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Qnext</string>
        </entry>
      </elementAttributes>
      <pos x="1300" y="660"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Q</string>
        </entry>
      </elementAttributes>
      <pos x="1300" y="700"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Qnext</string>
        </entry>
      </elementAttributes>
      <pos x="1280" y="400"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="1000" y="400"/>
      <p2 x="1080" y="400"/>
    </wire>
    <wire>
      <p1 x="1180" y="400"/>
      <p2 x="1280" y="400"/>
    </wire>
    <wire>
      <p1 x="960" y="720"/>
      <p2 x="1100" y="720"/>
    </wire>
    <wire>
      <p1 x="920" y="420"/>
      <p2 x="960" y="420"/>
    </wire>
    <wire>
      <p1 x="1020" y="420"/>
      <p2 x="1080" y="420"/>
    </wire>
    <wire>
      <p1 x="960" y="420"/>
      <p2 x="1000" y="420"/>
    </wire>
    <wire>
      <p1 x="1200" y="660"/>
      <p2 x="1300" y="660"/>
    </wire>
    <wire>
      <p1 x="1040" y="660"/>
      <p2 x="1100" y="660"/>
    </wire>
    <wire>
      <p1 x="920" y="580"/>
      <p2 x="1020" y="580"/>
    </wire>
    <wire>
      <p1 x="940" y="740"/>
      <p2 x="1100" y="740"/>
    </wire>
    <wire>
      <p1 x="1200" y="680"/>
      <p2 x="1260" y="680"/>
    </wire>
    <wire>
      <p1 x="1020" y="680"/>
      <p2 x="1100" y="680"/>
    </wire>
    <wire>
      <p1 x="920" y="520"/>
      <p2 x="1040" y="520"/>
    </wire>
    <wire>
      <p1 x="920" y="380"/>
      <p2 x="980" y="380"/>
    </wire>
    <wire>
      <p1 x="980" y="380"/>
      <p2 x="1080" y="380"/>
    </wire>
    <wire>
      <p1 x="920" y="460"/>
      <p2 x="940" y="460"/>
    </wire>
    <wire>
      <p1 x="940" y="460"/>
      <p2 x="1020" y="460"/>
    </wire>
    <wire>
      <p1 x="1260" y="700"/>
      <p2 x="1300" y="700"/>
    </wire>
    <wire>
      <p1 x="980" y="700"/>
      <p2 x="1100" y="700"/>
    </wire>
    <wire>
      <p1 x="1040" y="520"/>
      <p2 x="1040" y="660"/>
    </wire>
    <wire>
      <p1 x="960" y="420"/>
      <p2 x="960" y="720"/>
    </wire>
    <wire>
      <p1 x="980" y="380"/>
      <p2 x="980" y="700"/>
    </wire>
    <wire>
      <p1 x="1000" y="400"/>
      <p2 x="1000" y="420"/>
    </wire>
    <wire>
      <p1 x="1020" y="420"/>
      <p2 x="1020" y="460"/>
    </wire>
    <wire>
      <p1 x="1020" y="580"/>
      <p2 x="1020" y="680"/>
    </wire>
    <wire>
      <p1 x="1260" y="680"/>
      <p2 x="1260" y="700"/>
    </wire>
    <wire>
      <p1 x="940" y="460"/>
      <p2 x="940" y="740"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>